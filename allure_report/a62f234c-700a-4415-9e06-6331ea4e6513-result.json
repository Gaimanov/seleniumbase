{"name": "test_guest_can_add_product_to_cart[7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: name of the book does not match book in the message\nassert 'Coders at Work book' == 'Coders at Work'\n  - Coders at Work\n  + Coders at Work book\n  ?               +++++", "trace": "self = <test_product_page.TestCase object at 0x0000023D16A26520>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae275577c72647f2fac96715d91c6dfd\")>, number = 7\n\n    @pytest.mark.parametrize('number', ['0', '1', '2', '3', '4', '5', '6',\n                                        pytest.param(7, marks=pytest.mark.xfail), '8', '9'])\n    @pytest.mark.smoke\n    def test_guest_can_add_product_to_cart(self, browser, number):\n        link = f'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer{number}'\n        product_page = ProductPage(browser, link)\n        product_page.open()\n        # product_page.go_to_login_page()\n        product_page.add_item_to_basket()\n        product_page.solve_quiz_and_get_code()\n        assert product_page.is_element_present(*ProductPageLocators.MESSAGE), \"Message is not presented\"\n    \n        msg = product_page.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text\n        product = product_page.browser.find_element(*ProductPageLocators.MESSAGE).text\n>       assert product == msg, 'name of the book does not match book in the message'\nE       AssertionError: name of the book does not match book in the message\nE       assert 'Coders at Work book' == 'Coders at Work'\nE         - Coders at Work\nE         + Coders at Work book\nE         ?               +++++\n\ntest_product_page.py:26: AssertionError"}, "attachments": [{"name": "stdout", "source": "4e3ba395-a502-45fc-b85b-23496064623d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "number", "value": "7"}], "start": 1634632733533, "stop": 1634632737557, "uuid": "56e4c9d0-7668-47fa-9811-cc7a37ed669d", "historyId": "fbd56b96386cb6f90f01638d16332087", "testCaseId": "943bd6692a472fc65758229785f1fa49", "fullName": "test_product_page.TestCase#test_guest_can_add_product_to_cart", "labels": [{"name": "tag", "value": "smoke"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "nba-206-31"}, {"name": "thread", "value": "6884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}