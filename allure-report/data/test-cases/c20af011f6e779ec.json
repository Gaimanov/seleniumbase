{
  "uid" : "c20af011f6e779ec",
  "name" : "test_guest_can_add_product_to_cart[7]",
  "fullName" : "test_product_page.TestCase#test_guest_can_add_product_to_cart",
  "historyId" : "fbd56b96386cb6f90f01638d16332087",
  "time" : {
    "start" : 1634632733533,
    "stop" : 1634632737557,
    "duration" : 4024
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: name of the book does not match book in the message\nassert 'Coders at Work book' == 'Coders at Work'\n  - Coders at Work\n  + Coders at Work book\n  ?               +++++",
  "statusTrace" : "self = <test_product_page.TestCase object at 0x0000023D16A26520>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae275577c72647f2fac96715d91c6dfd\")>, number = 7\n\n    @pytest.mark.parametrize('number', ['0', '1', '2', '3', '4', '5', '6',\n                                        pytest.param(7, marks=pytest.mark.xfail), '8', '9'])\n    @pytest.mark.smoke\n    def test_guest_can_add_product_to_cart(self, browser, number):\n        link = f'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer{number}'\n        product_page = ProductPage(browser, link)\n        product_page.open()\n        # product_page.go_to_login_page()\n        product_page.add_item_to_basket()\n        product_page.solve_quiz_and_get_code()\n        assert product_page.is_element_present(*ProductPageLocators.MESSAGE), \"Message is not presented\"\n    \n        msg = product_page.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text\n        product = product_page.browser.find_element(*ProductPageLocators.MESSAGE).text\n>       assert product == msg, 'name of the book does not match book in the message'\nE       AssertionError: name of the book does not match book in the message\nE       assert 'Coders at Work book' == 'Coders at Work'\nE         - Coders at Work\nE         + Coders at Work book\nE         ?               +++++\n\ntest_product_page.py:26: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1634632732280,
      "stop" : 1634632733528,
      "duration" : 1248
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1634632680318,
      "stop" : 1634632680399,
      "duration" : 81
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: name of the book does not match book in the message\nassert 'Coders at Work book' == 'Coders at Work'\n  - Coders at Work\n  + Coders at Work book\n  ?               +++++",
    "statusTrace" : "self = <test_product_page.TestCase object at 0x0000023D16A26520>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae275577c72647f2fac96715d91c6dfd\")>, number = 7\n\n    @pytest.mark.parametrize('number', ['0', '1', '2', '3', '4', '5', '6',\n                                        pytest.param(7, marks=pytest.mark.xfail), '8', '9'])\n    @pytest.mark.smoke\n    def test_guest_can_add_product_to_cart(self, browser, number):\n        link = f'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer{number}'\n        product_page = ProductPage(browser, link)\n        product_page.open()\n        # product_page.go_to_login_page()\n        product_page.add_item_to_basket()\n        product_page.solve_quiz_and_get_code()\n        assert product_page.is_element_present(*ProductPageLocators.MESSAGE), \"Message is not presented\"\n    \n        msg = product_page.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text\n        product = product_page.browser.find_element(*ProductPageLocators.MESSAGE).text\n>       assert product == msg, 'name of the book does not match book in the message'\nE       AssertionError: name of the book does not match book in the message\nE       assert 'Coders at Work book' == 'Coders at Work'\nE         - Coders at Work\nE         + Coders at Work book\nE         ?               +++++\n\ntest_product_page.py:26: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2686e78f69690b31",
      "name" : "stdout",
      "source" : "2686e78f69690b31.txt",
      "type" : "text/plain",
      "size" : 42
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1634632737751,
      "stop" : 1634632739907,
      "duration" : 2156
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestCase"
  }, {
    "name" : "host",
    "value" : "nba-206-31"
  }, {
    "name" : "thread",
    "value" : "6884-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "number",
    "value" : "7"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail", "smoke" ]
  },
  "source" : "c20af011f6e779ec.json",
  "parameterValues" : [ "7" ]
}